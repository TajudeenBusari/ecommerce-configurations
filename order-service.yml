spring:
  datasource:
    url: jdbc:postgresql://${DB_HOST:localhost}:5432/ECommerce-Order-Service
    username: ${DB_USER:postgres}
    password: ${DB_PASSWORD:postgres}
  jpa:
    hibernate:
      ddl-auto: update
    show-sql: true
    properties:
      hibernate:
        format_sql: true
    database-platform: org.hibernate.dialect.PostgreSQLDialect
  profiles:
    active: ${SPRING_PROFILES_ACTIVE:local} #default to 'local' if not set

  cloud:
    config:
      allow-override: true #This allows the application to override properties from the config server
      override-none: false #This allows the application to override properties from the config server
      override-system-properties: false #This allows the application to override system properties from the config server
  data:
    redis:
      host: ${REDIS_HOST:${SPRING_DATA_REDIS_HOST:localhost}}
      port: ${REDIS_PORT:${SPRING_DATA_REDIS_PORT:6379}}
      database: 0 #default Redis database
      password: ${REDIS_PASSWORD:} #optional password, if Redis is secured, empty
      timeout: 5000 #5 seconds

api:
  endpoint:
    base-url: /api/v1
  redis:
    cache-prefix: order-service-${spring.profiles.active}
  cache:
    type: ${CACHE_TYPE:REDIS} #Allows cache type override
  jackson:
    serialization:
      write-dates-as-timestamps: false #This ensures that dates are serialized as ISO-8601 formatted strings instead of Unix timestamps.
    deserialization:
      fail-on-unknown-properties: false #This allows the application to ignore unknown properties in JSON

#Register with Eureka service discovery
eureka:
  client:
    service-url:
      defaultZone: ${EUREKA_SERVER_URL:http://localhost:8763/eureka/}
    fetch-registry: true
    register-with-eureka: true
  instance:
    prefer-ip-address: true
    instance-id: ${spring.application.name}:${spring.application.instance_id:${random.value}}
logging:
  level:
    org.springframework.data.redis: DEBUG
    org.springframework.cloud.config: DEBUG

#this file is now available in the submodule applicationsConfiguration

